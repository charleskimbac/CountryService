"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=u(r),m=a,d=s["".concat(i,".").concat(m)]||s[m]||y[m]||o;return r?n.createElement(d,l(l({ref:t},p),{},{components:r})):n.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[s]="string"==typeof e?e:a,l[1]=c;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},76647:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var n=r(87462),a=(r(67294),r(3905));const o={},l="CountryService \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f",c={type:"mdx",permalink:"/CountryService/",source:"@site/pages/index.md",title:"CountryService \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f",description:"Documentation | Source",frontMatter:{}},i=[{value:"\ud83e\udd13 Introduction",id:"-introduction",level:4},{value:"\ud83d\udd28 Code Example",id:"-code-example",level:4},{value:"\ud83c\udf6aFeatures",id:"features",level:3},{value:"\ud83c\udfe0Example Place",id:"example-place",level:3},{value:"\ud83d\udcc1Download",id:"download",level:3}],u={toc:i},p="wrapper";function s(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"countryservice-"},"CountryService \ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://prooheckcp.github.io/CountryService/"},"Documentation")," | ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/prooheckcp/CountryService"},"Source")),(0,a.kt)("h4",{id:"-introduction"},"\ud83e\udd13 Introduction"),(0,a.kt)("p",null,"A long time ago I came across an issue in one of my games in which I needed the information about a user's country. I wanted to make country-wise leaderboards. Sounds easy right? Yes, I would need to just use the LocalizationService and make the leaderboards by their country code! There was only one problem\u2026 The LocalizationService only returns the country code, nothing else, no flag, no country name, no nothing else!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'LocalizationService:GetCountryRegionForPlayerAsync(player) -- Only returns "US"\n')),(0,a.kt)("p",null,"And that\u2019s when I decided to do \u201cProoCountry\u201d, an old library I did when I was still new to Roblox scripting that would return the country name and flag."),(0,a.kt)("p",null,"2 years later I went across the same issue and was thinking about using ProoCountry but the code looked so messy and limited that I decided to just make a new one, CountryService! This library allows you to get a player's country, country name, country flag emoji, and even the country's flag ID to use on ImageLabels, ImageButtons, and even Decals!"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://cdn.discordapp.com/attachments/670023265455964198/1098670837013422132/RobloxScreenShot20230420_000142829.png",alt:null})),(0,a.kt)("h4",{id:"-code-example"},"\ud83d\udd28 Code Example"),(0,a.kt)("p",null,"Here I will be showing some examples on how to use the CountryService."),(0,a.kt)("p",null,"CountryService works on both the Client and Server side. Here are two examples, 1 for each side."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Client Example (LocalScript)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local  ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal  Players = game:GetService("Players")\n\nlocal  CountryService = require(ReplicatedStorage.CountryService)\n\nlocal  localPlayer: Player = Players.LocalPlayer\nlocal  playerGui: PlayerGui = localPlayer.PlayerGui\n\n--Gets the country of the player\nlocal  country = CountryService:GetMyCountry()\n\n--Set the UI\nlocal  screenGui: ScreenGui = playerGui:WaitForChild("Country") :: ScreenGui\nlocal  container: Frame = screenGui:WaitForChild("Container") :: Frame\n\nlocal  countryFlag: ImageLabel = container:WaitForChild("CountryFlag") :: ImageLabel\nlocal  countryInfo: TextLabel = container:WaitForChild("CountryInfo") :: TextLabel\n\ncountryFlag.Image = country.decal -- Uses the country flag\n\ncountryInfo.Text = `Hi! Welcome from {country.name}  {country.emoji}` -- Uses the country name and emoji\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Server Example (Script)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local  ReplicatedStorage = game:GetService("ReplicatedStorage")\nlocal  Players = game:GetService("Players")\n\nlocal  CountryService = require(ReplicatedStorage.CountryService)\n--Set country tags\nPlayers.PlayerAdded:Connect(function(player: Player)\n    player.CharacterAdded:Connect(function(character: Model)\n        local  playerCountry = CountryService:GetPlayerCountry(player)\n        local  label: string = `{playerCountry.emoji}  {player.Name} | {playerCountry.name}`\n        local  newGui: BillboardGui = template:Clone()\n        local  countryInfo: TextLabel = newGui:WaitForChild("CountryInfo") :: TextLabel\n\n        countryInfo.Text = label\n\n        newGui.Parent = character.PrimaryPart\n    end)\nend)\n')),(0,a.kt)("h3",{id:"features"},"\ud83c\udf6aFeatures"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Images, Decals and ImageButtons")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Emojis")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Country Name")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Both Server and Client Sided")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Support for types"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local  playerCountry: CountryService.Country = CountryService:GetPlayerCountry(player)\n")),(0,a.kt)("h3",{id:"example-place"},"\ud83c\udfe0Example Place"),(0,a.kt)("p",null,"Want to see it in action? I set up a copy unlocked place! ",(0,a.kt)("a",{parentName:"p",href:"https://www.roblox.com/games/13186743835/CountryService-Example-Place"},"CountryService - Example Place - Roblox")),(0,a.kt)("h3",{id:"download"},"\ud83d\udcc1Download"),(0,a.kt)("p",null,"There's 3 ways you can get this library so feel free to go with which ever you're the most comfortable."),(0,a.kt)("p",null,"Roblox Studio Model: ",(0,a.kt)("a",{parentName:"p",href:"https://www.roblox.com/library/13194747001/CountryService-V-1-0"},"https://www.roblox.com/library/13194747001/CountryService-V-1-0")),(0,a.kt)("p",null,"Wally: ",(0,a.kt)("a",{parentName:"p",href:"https://wally.run/package/prooheckcp/countryservice"},"https://wally.run/package/prooheckcp/countryservice")),(0,a.kt)("p",null,"GitHub Release: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/prooheckcp/CountryService"},"https://github.com/prooheckcp/CountryService")),(0,a.kt)("p",null,"Please leave a star \u2b50 in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/prooheckcp/CountryService"},"GitHub")," and or a heart on this post \u2764\ufe0f, it takes less than 10 seconds and it helps me a lot!"))}s.isMDXComponent=!0}}]);