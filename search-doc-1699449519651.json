[{"title":"🤔About","type":0,"sectionRef":"#","url":"/CountryService/docs/intro","content":"","keywords":""},{"title":"🔍Why Choose CountryService​","type":1,"pageTitle":"🤔About","url":"/CountryService/docs/intro#why-choose-countryservice","content":""},{"title":"🔌Quick access​","type":1,"pageTitle":"🤔About","url":"/CountryService/docs/intro#quick-access","content":"This library allows you to get all the data you need in a single line of code! It's very easy and straightforward "},{"title":"🔧🧹Maintenance​","type":1,"pageTitle":"🤔About","url":"/CountryService/docs/intro#maintenance","content":"This library is heavily maintained and will continue to be for a very long time! If any bug ever gets found or feature is requested it will be updated as soon as possible. "},{"title":"🗡️Battle-Scarred​","type":1,"pageTitle":"🤔About","url":"/CountryService/docs/intro#️battle-scarred","content":"This library has already been battle-scarred. It was used in many projects many of them amounting many million visits and never broke or had any bug at all. "},{"title":"🚀Getting Started","type":0,"sectionRef":"#","url":"/CountryService/docs/gettingStarted","content":"","keywords":""},{"title":"📦 Installing​","type":1,"pageTitle":"🚀Getting Started","url":"/CountryService/docs/gettingStarted#-installing","content":"CountryService can be installed in different ways, depending on your project's needs. Choose the method that suits you best: 🐶 Wally🔨Studio🐙GitHub Watch wally's page countryservice = &quot;prooheckcp/countryservice@&gt;0.0.0, &lt;10.0.0&quot;  🚀 Basic Usage Once you have CountryService installed, you can start using it in your project. Here's a basic example of how to use it: local CountryService = require(ReplicatedStorage.CountryService) Players.PlayerAdded:Connect(function(player: Player) print(CountryService:GetCountryByCode(&quot;PT&quot;)) -- Portugal print(CountryService:GetPlayerCountry(player)) -- Portugal print(CountryService:GetPlayerCountryCode(player)) -- PT end)  "},{"title":"🖥️ Server Example","type":0,"sectionRef":"#","url":"/CountryService/docs/example/Server","content":"🖥️ Server Example --Set country tags Players.PlayerAdded:Connect(function(player: Player) -- TESTING print(CountryService:GetCountryByCode(&quot;PT&quot;)) print(CountryService:GetPlayerCountry(player)) print(CountryService:GetPlayerCountryCode(player)) player.CharacterAdded:Connect(function(character: Model) local playerCountry: CountryService.Country = CountryService:GetPlayerCountry(player) local label: string = `{playerCountry.emoji} {player.Name} | {playerCountry.name}` local newGui: BillboardGui = Instance.new(&quot;BillboardGui&quot;) local countryInfo: TextLabel = newGui:WaitForChild(&quot;CountryInfo&quot;) :: TextLabel countryInfo.Text = label newGui.Parent = character.PrimaryPart end) end) Result:","keywords":""},{"title":"📱 Client Example","type":0,"sectionRef":"#","url":"/CountryService/docs/example/Client","content":"📱 Client Example This example sets the player's country and emoji on the player's UI! local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local Players = game:GetService(&quot;Players&quot;) local localPlayer: Player = Players.LocalPlayer local playerGui: PlayerGui = localPlayer.PlayerGui local CountryService = require(ReplicatedStorage.CountryService) local country: CountryService.Country = CountryService:GetMyCountry() --Set the UI local screenGui: ScreenGui = playerGui:WaitForChild(&quot;Country&quot;) :: ScreenGui local container: Frame = screenGui:WaitForChild(&quot;Container&quot;) :: Frame local countryFlag: ImageLabel = container:WaitForChild(&quot;CountryFlag&quot;) :: ImageLabel local countryInfo: TextLabel = container:WaitForChild(&quot;CountryInfo&quot;) :: TextLabel countryFlag.Image = country.decal countryInfo.Text = `Hi! Welcome from {country.name} {country.emoji}` -- TESTING print(CountryService:GetCountryByCode(&quot;PT&quot;)) print(CountryService:GetMyCountry()) print(CountryService:GetMyCountryCode()) print(CountryService:GetPlayerCountry(localPlayer)) print(CountryService:GetPlayerCountryCode(localPlayer)) Result:","keywords":""},{"title":"Country","type":0,"sectionRef":"#","url":"/CountryService/api/Country","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Country","url":"/CountryService/api/Country#properties","content":" "},{"title":"Code​","type":1,"pageTitle":"Country","url":"/CountryService/api/Country#Code","content":"&lt;/&gt; Country.Code: string The code of the country e.g US  "},{"title":"Name​","type":1,"pageTitle":"Country","url":"/CountryService/api/Country#Name","content":"&lt;/&gt; Country.Name: string Contains the name of the country e.g US = &quot;United States&quot;  "},{"title":"Emoji​","type":1,"pageTitle":"Country","url":"/CountryService/api/Country#Emoji","content":"&lt;/&gt; Country.Emoji: string Contains the emoji of the country e.g US = 🇺🇸  "},{"title":"Decal​","type":1,"pageTitle":"Country","url":"/CountryService/api/Country#Decal","content":"&lt;/&gt; Country.Decal: string Contains the flag of the emoji, it can be used for ImageLabels, Decals and ImageButtons! "},{"title":"CountryService","type":0,"sectionRef":"#","url":"/CountryService/api/CountryService","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#properties","content":" "},{"title":"Country​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#Country","content":"&lt;/&gt; CountryService.Country: Country Contains the Country class used to retain country data "},{"title":"Functions​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#functions","content":" "},{"title":"GetCountryByCode​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#GetCountryByCode","content":"&lt;/&gt; CountryService:GetCountryByCode(countryCode: string) → Country Returns the country object by the country code. By default this returns the United States in case it cannot find any country with the given code local CountryService = require(ReplicatedStorage.CountryService) local country: CountryService.Country = CountryService:GetCountryByCode(&quot;US&quot;) print(country.name) -- United States print(country.emoji) -- 🇺🇸 print(country.decal) -- rbxassetid://123456789   "},{"title":"GetAllCountries​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#GetAllCountries","content":"&lt;/&gt; CountryService:GetAllCountries() → {[string]: Country} Returns all the countries that exist in a dictionary format local CountryService = require(ReplicatedStorage.CountryService) local countries: {[string]: CountryService.Country} = CountryService:GetAllCountries() for code, country: CountryService.Country in countries do print(code, country.name) -- Will print every existing name and code end   "},{"title":"GetMyCountry​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#GetMyCountry","content":"This item only works when running on the client. Client This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; CountryService:GetMyCountry() → Country? Returns your own Country. Only works when called from a client script local CountryService = require(ReplicatedStorage.CountryService) local country: CountryService.Country = CountryService:GetMyCountry() print(country.name) -- United States   "},{"title":"GetMyCountryCode​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#GetMyCountryCode","content":"This item only works when running on the client. Client This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; CountryService:GetMyCountryCode() → string-- Country Code Gets the country code of the player. Only works when called from a client script local CountryService = require(ReplicatedStorage.CountryService) local countryCode: string = CountryService:GetMyCountryCode() print(countryCode) -- US   "},{"title":"GetPlayerCountryCode​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#GetPlayerCountryCode","content":"&lt;/&gt; CountryService:GetPlayerCountryCode(player: Player ) → string-- Country Code Gets the country code by the player object local CountryService = require(ReplicatedStorage.CountryService) local countryCode: string = CountryService:GetPlayerCountryCode(player) print(countryCode) -- US   "},{"title":"GetPlayerCountry​","type":1,"pageTitle":"CountryService","url":"/CountryService/api/CountryService#GetPlayerCountry","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; CountryService:GetPlayerCountry(player: Player ) → Country Gets a country object by the player object local CountryService = require(ReplicatedStorage.CountryService) local country: CountryService.Country = CountryService:GetPlayerCountry(player) print(country.name) -- United States  "}]